{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\czarn\\\\Desktop\\\\Praca\\\\colors_app\\\\src\\\\components\\\\UserColors\\\\UserColors.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport '../UserColors/UserColors-style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterColorForm() {\n  _s();\n  const [chosenColors, setChosenColor] = useState([{\n    hex: '',\n    red: '',\n    green: '',\n    blue: ''\n  }]);\n  const chosenColor = localStorage.getItem('colors');\n  useEffect(() => {\n    if (chosenColor) {\n      const colorArray = JSON.parse(chosenColor);\n      console.log(colorArray);\n      setChosenColor(colorArray);\n    }\n  }, [chosenColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Options:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), chosenColors === null || chosenColors === void 0 ? void 0 : chosenColors.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Color in HEX: \", color.hex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Color in RGB :\", ' ', /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [color.red, \":\", color.green, \":\", color.blue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"container-btn\",\n        children: \"Remove color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this)]\n    }, color.hex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n_s(FilterColorForm, \"UyoGuBgwOScUg8CXPN6SREjt28M=\");\n_c = FilterColorForm;\nvar _c;\n$RefreshReg$(_c, \"FilterColorForm\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","FilterColorForm","_s","chosenColors","setChosenColor","hex","red","green","blue","chosenColor","localStorage","getItem","colorArray","JSON","parse","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","color","_c","$RefreshReg$"],"sources":["C:/Users/czarn/Desktop/Praca/colors_app/src/components/UserColors/UserColors.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport '../UserColors/UserColors-style.scss'\r\nexport default function FilterColorForm() {\r\n\tconst [chosenColors, setChosenColor] = useState([\r\n\t\t{\r\n\t\t\thex: '',\r\n\t\t\tred: '',\r\n\t\t\tgreen: '',\r\n\t\t\tblue: '',\r\n\t\t},\r\n\t])\r\n\tconst chosenColor = localStorage.getItem('colors')\r\n\tuseEffect(() => {\r\n\t\tif (chosenColor) {\r\n\t\t\tconst colorArray: [] = JSON.parse(chosenColor)\r\n\t\t\tconsole.log(colorArray)\r\n\t\t\tsetChosenColor(colorArray)\r\n\t\t}\r\n\t}, [chosenColor])\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='filter-container'>\r\n\t\t\t<h2>Options:</h2>\r\n\t\t\r\n\t\t\t{chosenColors?.map(color => (\r\n\t\t\t\t<div key={color.hex}>\r\n\t\t\t\t\t<h4>Color in HEX: {color.hex}</h4>\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tColor in RGB :{' '}\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{color.red}:{color.green}:{color.blue}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<button className='container-btn'>Remove color</button>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,qCAAqC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC5C,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,YAAY,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAC/C;IACCO,GAAG,EAAE,EAAE;IACPC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE;EACP,CAAC,CACD,CAAC;EACF,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAClDd,SAAS,CAAC,MAAM;IACf,IAAIY,WAAW,EAAE;MAChB,MAAMG,UAAc,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,CAAC;MAC9CM,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;MACvBR,cAAc,CAACQ,UAAU,CAAC;IAC3B;EACD,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAKjB,oBACCT,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAChClB,OAAA;MAAAkB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEhBnB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEoB,GAAG,CAACC,KAAK,iBACvBxB,OAAA;MAAAkB,QAAA,gBACClB,OAAA;QAAAkB,QAAA,GAAI,gBAAc,EAACM,KAAK,CAACnB,GAAG;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAClCtB,OAAA;QAAAkB,QAAA,GAAI,gBACW,EAAC,GAAG,eAClBlB,OAAA;UAAAkB,QAAA,GACEM,KAAK,CAAClB,GAAG,EAAC,GAAC,EAACkB,KAAK,CAACjB,KAAK,EAAC,GAAC,EAACiB,KAAK,CAAChB,IAAI;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eACLtB,OAAA;QAAQiB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA,GAR9CE,KAAK,CAACnB,GAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAUnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAER;AAACpB,EAAA,CAvCuBD,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}