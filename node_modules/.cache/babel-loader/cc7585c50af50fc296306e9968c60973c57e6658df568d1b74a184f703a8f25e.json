{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\czarn\\\\Desktop\\\\Praca\\\\colors_app\\\\src\\\\components\\\\AddColorForm\\\\AddColorForm.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddColorForm() {\n  _s();\n  const [colors, setColors] = useState(JSON.parse(localStorage.getItem('colors') || '[]'));\n  const [error, setError] = useState('');\n  //const [addRgb, setAddedRgb] = useState('')\n  //const [addHex, setAddedHex] = useState('')\n  const [color, setColor] = useState({\n    hex: '',\n    rgb: ''\n  });\n  console.log(colors);\n  const handleChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    if (name == 'hex' && value.includes('#') && value.indexOf('#') !== value.lastIndexOf('#')) {\n      setError('Pleas write good code of color');\n    } else {\n      setError('');\n      setColor({\n        ...color,\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setColors([...colors, color]);\n    setColor({\n      hex: '',\n      rgb: ''\n    });\n  };\n  useEffect(() => {\n    localStorage.setItem('colors', JSON.stringify(colors));\n  }, [colors]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hex\",\n        children: \"Enter HEX value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"hex\",\n        value: color.hex,\n        onChange: handleChange,\n        required: true,\n        maxLength: 7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rgb\",\n        id: \"hex\",\n        children: \"Enter RGB value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"rgb\",\n        value: color.rgb,\n        onChange: handleChange,\n        required: true,\n        maxLength: 11\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(AddColorForm, \"RTYOCBUnGVZXzapQL1098RMK7R4=\");\n_c = AddColorForm;\nvar _c;\n$RefreshReg$(_c, \"AddColorForm\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AddColorForm","_s","colors","setColors","JSON","parse","localStorage","getItem","error","setError","color","setColor","hex","rgb","console","log","handleChange","event","value","target","name","includes","indexOf","lastIndexOf","handleSubmit","preventDefault","setItem","stringify","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","maxLength","id","_c","$RefreshReg$"],"sources":["C:/Users/czarn/Desktop/Praca/colors_app/src/components/AddColorForm/AddColorForm.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport default function AddColorForm() {\r\n\tconst [colors, setColors] = useState(JSON.parse(localStorage.getItem('colors') || '[]'))\r\n\tconst [error, setError] = useState('')\r\n\t//const [addRgb, setAddedRgb] = useState('')\r\n\t//const [addHex, setAddedHex] = useState('')\r\n\tconst [color, setColor] = useState({\r\n\t\thex: '',\r\n\t\trgb: '',\r\n\t})\r\n\tconsole.log(colors)\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst value = event.target.value\r\n\t\tconst name = event.target.name\r\n\r\n\t\tif (name == 'hex' && value.includes('#') && value.indexOf('#') !== value.lastIndexOf('#')) {\r\n\t\t\tsetError('Pleas write good code of color')\r\n\t\t} else {\r\n\t\t\tsetError('')\r\n\t\t\tsetColor({ ...color, [event.target.name]: event.target.value })\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = (event: React.FormEvent) => {\r\n\t\tevent.preventDefault()\r\n\t\tsetColors([...colors, color])\r\n\t\tsetColor({\r\n\t\t\thex: '',\r\n\t\t\trgb: '',\r\n\t\t})\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('colors', JSON.stringify(colors))\r\n\t}, [colors])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<label htmlFor='hex'>Enter HEX value:</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type='text' name='hex' value={color.hex} onChange={handleChange} required maxLength={7} />\r\n\t\t\t\t<h3>{error}</h3>\r\n\t\t\t\t<br />\r\n\t\t\t\t<label htmlFor='rgb' id='hex'>\r\n\t\t\t\t\tEnter RGB value:\r\n\t\t\t\t</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type='text' name='rgb' value={color.rgb} onChange={handleChange} required maxLength={11} />\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type='submit' />\r\n\t\t\t</form>\r\n\t\t</>\r\n\t)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}