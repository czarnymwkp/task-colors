{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\czarn\\\\Desktop\\\\Praca\\\\colors_app\\\\src\\\\components\\\\AddColorForm\\\\AddColorForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRGBState = {\n  red: undefined,\n  green: undefined,\n  blue: undefined\n};\nexport default function AddColorForm() {\n  _s();\n  var _rgbColors$red;\n  const [colors, setColors] = useState(JSON.parse(localStorage.getItem('colors') || '[]'));\n  const [error, setError] = useState('');\n  const [rgbColors, setRgbColors] = useState(defaultRGBState);\n  const [hexColor, setHexColor] = useState();\n  const handleChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    if (name === 'hex' && (value.indexOf('#') !== 0 || value.lastIndexOf('#') !== 0 || value.indexOf('#') !== value.lastIndexOf('#'))) {\n      setError('Pleas write good code of color');\n    } else if ((name === 'red' || name === 'green' || name === 'blue') && value.length > 3) {\n      setError('Pleas write good code of color');\n    } else {\n      setError('');\n      name === 'hex' ? setHexColor(event.target.value) : setRgbColors(prev => ({\n        ...prev,\n        [event.target.name]: event.target.value\n      }));\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const color = hexColor !== null && hexColor !== void 0 ? hexColor : rgbColors;\n    const newColors = [...colors, color];\n    setColors(newColors);\n    setRgbColors(defaultRGBState);\n    setHexColor(undefined);\n    localStorage.setItem('colors', JSON.stringify(newColors));\n  };\n  console.log(Object.values(rgbColors), !Object.values(rgbColors).some(val => val));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hex\",\n        children: \"Enter HEX value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"hex\",\n        value: hexColor,\n        onChange: handleChange,\n        required: !Object.values(rgbColors).some(val => val),\n        maxLength: 7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rgbColor\",\n        id: \"rgbColor\",\n        children: \"Enter RGB colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"red\",\n        children: \" RED \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"red\",\n        id: \"\",\n        onChange: handleChange,\n        value: (_rgbColors$red = rgbColors.red) !== null && _rgbColors$red !== void 0 ? _rgbColors$red : '',\n        required: !hexColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"red\",\n        children: \" GREEN \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"green\",\n        id: \"\",\n        onChange: handleChange,\n        value: rgbColors.green,\n        required: !hexColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"red\",\n        children: \" BLUE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"blue\",\n        id: \"\",\n        onChange: handleChange,\n        value: rgbColors.blue,\n        required: !hexColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(AddColorForm, \"E9HiHgL9NQ6l8L2n0FAg9BkgpcM=\");\n_c = AddColorForm;\nvar _c;\n$RefreshReg$(_c, \"AddColorForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRGBState","red","undefined","green","blue","AddColorForm","_s","_rgbColors$red","colors","setColors","JSON","parse","localStorage","getItem","error","setError","rgbColors","setRgbColors","hexColor","setHexColor","handleChange","event","value","target","name","indexOf","lastIndexOf","length","prev","handleSubmit","preventDefault","color","newColors","setItem","stringify","console","log","Object","values","some","val","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","maxLength","id","_c","$RefreshReg$"],"sources":["C:/Users/czarn/Desktop/Praca/colors_app/src/components/AddColorForm/AddColorForm.tsx"],"sourcesContent":["import { unescape } from 'querystring'\r\nimport { useState } from 'react'\r\n\r\nconst defaultRGBState = { red: undefined, green: undefined, blue: undefined }\r\n\r\nexport default function AddColorForm() {\r\n\tconst [colors, setColors] = useState(JSON.parse(localStorage.getItem('colors') || '[]'))\r\n\tconst [error, setError] = useState('')\r\n\tconst [rgbColors, setRgbColors] = useState<{\r\n\t\tred: undefined | string\r\n\t\tgreen: undefined | string\r\n\t\tblue: undefined | string\r\n\t}>(defaultRGBState)\r\n\tconst [hexColor, setHexColor] = useState<string>()\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst value = event.target.value\r\n\t\tconst name = event.target.name\r\n\r\n\t\tif (\r\n\t\t\tname === 'hex' &&\r\n\t\t\t(value.indexOf('#') !== 0 || value.lastIndexOf('#') !== 0 || value.indexOf('#') !== value.lastIndexOf('#'))\r\n\t\t) {\r\n\t\t\tsetError('Pleas write good code of color')\r\n\t\t} else if ((name === 'red' || name === 'green' || name === 'blue') && value.length > 3) {\r\n\t\t\tsetError('Pleas write good code of color')\r\n\t\t} else {\r\n\t\t\tsetError('')\r\n\t\t\tname === 'hex'\r\n\t\t\t\t? setHexColor(event.target.value)\r\n\t\t\t\t: setRgbColors(prev => ({ ...prev, [event.target.name]: event.target.value }))\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = (event: React.FormEvent) => {\r\n\t\tevent.preventDefault()\r\n\t\tconst color = hexColor ?? rgbColors\r\n\t\tconst newColors = [...colors, color]\r\n\t\tsetColors(newColors)\r\n\t\tsetRgbColors(defaultRGBState)\r\n\t\tsetHexColor(undefined)\r\n\t\tlocalStorage.setItem('colors', JSON.stringify(newColors))\r\n\t}\r\n\r\n\tconsole.log(Object.values(rgbColors), !Object.values(rgbColors).some(val => val))\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<label htmlFor='hex'>Enter HEX value:</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tname='hex'\r\n\t\t\t\t\tvalue={hexColor}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\trequired={!Object.values(rgbColors).some(val => val)}\r\n\t\t\t\t\tmaxLength={7}\r\n\t\t\t\t/>\r\n\t\t\t\t<h3>{error}</h3>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<label htmlFor='rgbColor' id='rgbColor'>\r\n\t\t\t\t\tEnter RGB colors\r\n\t\t\t\t</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<label htmlFor='red'> RED </label>\r\n\t\t\t\t<input type='number' name='red' id='' onChange={handleChange} value={rgbColors.red ?? ''} required={!hexColor} />\r\n\t\t\t\t<label htmlFor='red'> GREEN </label>\r\n\t\t\t\t<input type='number' name='green' id='' onChange={handleChange} value={rgbColors.green} required={!hexColor} />\r\n\t\t\t\t<label htmlFor='red'> BLUE </label>\r\n\t\t\t\t<input type='number' name='blue' id='' onChange={handleChange} value={rgbColors.blue} required={!hexColor} />\r\n\t\t\t\t<input type='submit' />\r\n\t\t\t</form>\r\n\t\t</>\r\n\t)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}