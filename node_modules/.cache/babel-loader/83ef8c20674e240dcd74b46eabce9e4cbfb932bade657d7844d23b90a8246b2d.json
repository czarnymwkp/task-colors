{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\czarn\\\\Desktop\\\\Praca\\\\colors_app\\\\src\\\\components\\\\AddColorForm\\\\AddColorForm.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddColorForm() {\n  _s();\n  const [colors, setColors] = useState(JSON.parse(localStorage.getItem('colors') || '[]'));\n  const [error, setError] = useState('');\n  //const [addRgb, setAddedRgb] = useState('')\n  //const [addHex, setAddedHex] = useState('')\n  const [color, setColor] = useState({\n    hex: '',\n    red: '',\n    green: '',\n    blue: ''\n  });\n  console.log(colors);\n  const handleChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    if (name === 'hex' && (value.indexOf('#') !== 0 || value.lastIndexOf('#') !== 0 || value.indexOf('#') !== value.lastIndexOf('#'))) {\n      setError('Pleas write good code of color');\n    } else {\n      if (color.red.length || color.green || color.blue) setError('');\n      setColor({\n        ...color,\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setColors([...colors, color]);\n    setColor({\n      hex: '',\n      red: '',\n      green: '',\n      blue: ''\n    });\n  };\n  useEffect(() => {\n    localStorage.setItem('colors', JSON.stringify(colors));\n  }, [colors]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hex\",\n        children: \"Enter HEX value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"hex\",\n        value: color.hex,\n        onChange: handleChange,\n        required: true,\n        maxLength: 7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rgbColor\",\n        id: \"rgbColor\",\n        children: \"Enter RGB colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"red\",\n        children: \" RED \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"red\",\n        id: \"\",\n        onChange: handleChange,\n        value: color.red,\n        required: true,\n        maxLength: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"red\",\n        children: \" GREEN \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"green\",\n        id: \"\",\n        onChange: handleChange,\n        value: color.green,\n        required: true,\n        maxLength: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"red\",\n        children: \" BLUE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"blue\",\n        id: \"\",\n        onChange: handleChange,\n        value: color.blue,\n        required: true,\n        maxLength: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(AddColorForm, \"XA4GpOmxBbzcVIB0qSqHS3EgIm8=\");\n_c = AddColorForm;\nvar _c;\n$RefreshReg$(_c, \"AddColorForm\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AddColorForm","_s","colors","setColors","JSON","parse","localStorage","getItem","error","setError","color","setColor","hex","red","green","blue","console","log","handleChange","event","value","target","name","indexOf","lastIndexOf","length","handleSubmit","preventDefault","setItem","stringify","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","maxLength","id","_c","$RefreshReg$"],"sources":["C:/Users/czarn/Desktop/Praca/colors_app/src/components/AddColorForm/AddColorForm.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport default function AddColorForm() {\r\n\tconst [colors, setColors] = useState(JSON.parse(localStorage.getItem('colors') || '[]'))\r\n\tconst [error, setError] = useState('')\r\n\t//const [addRgb, setAddedRgb] = useState('')\r\n\t//const [addHex, setAddedHex] = useState('')\r\n\tconst [color, setColor] = useState({\r\n\t\thex: '',\r\n\t\tred: '',\r\n\t\tgreen: '',\r\n\t\tblue: '',\r\n\t})\r\n\tconsole.log(colors)\r\n\tconst handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst value = event.target.value\r\n\t\tconst name = event.target.name\r\n\r\n\t\tif (\r\n\t\t\tname === 'hex' &&\r\n\t\t\t(value.indexOf('#') !== 0 || value.lastIndexOf('#') !== 0 || value.indexOf('#') !== value.lastIndexOf('#'))\r\n\t\t) {\r\n\t\t\tsetError('Pleas write good code of color')\r\n\t\t} else {\r\n\t\t\tif( color.red.length || color.green || color.blue  )\r\n\t\t\tsetError('')\r\n\t\t\tsetColor({ ...color, [event.target.name]: event.target.value })\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = (event: React.FormEvent) => {\r\n\t\tevent.preventDefault()\r\n\t\tsetColors([...colors, color])\r\n\t\tsetColor({\r\n\t\t\thex: '',\r\n\t\t\tred: '',\r\n\t\t\tgreen: '',\r\n\t\t\tblue: '',\r\n\t\t})\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem('colors', JSON.stringify(colors))\r\n\t}, [colors])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<label htmlFor='hex'>Enter HEX value:</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type='text' name='hex' value={color.hex} onChange={handleChange} required maxLength={7} />\r\n\t\t\t\t<h3>{error}</h3>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<label htmlFor='rgbColor' id='rgbColor'>\r\n\t\t\t\t\tEnter RGB colors\r\n\t\t\t\t</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<label htmlFor='red'> RED </label>\r\n\t\t\t\t<input type='number' name='red' id='' onChange={handleChange} value={color.red} required maxLength={3} />\r\n\t\t\t\t<label htmlFor='red'> GREEN </label>\r\n\t\t\t\t<input type='number' name='green' id='' onChange={handleChange} value={color.green} required maxLength={3} />\r\n\t\t\t\t<label htmlFor='red'> BLUE </label>\r\n\t\t\t\t<input type='number' name='blue' id='' onChange={handleChange} value={color.blue} required maxLength={3} />\r\n\t\t\t\t<input type='submit' />\r\n\t\t\t</form>\r\n\t\t</>\r\n\t)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}